function PyrBehAlignedAllRec(onlyRun,task)

    RecordingListPyrInt;  % include all the early NoCue (no blackout), PL and AL (up to A057)
    pathAnal0 = 'Z:\Yingxue\Draft\PV\Pyramidal\';
    if(task == 1) % including all the neurons
        pathAnal = ['Z:\Yingxue\Draft\PV\PyramidalBeh\'];
    elseif(task == 2) % including AL and PL neurons
        pathAnal = ['Z:\Yingxue\Draft\PV\PyramidalBehALPL\'];
    else
        pathAnal = ['Z:\Yingxue\Draft\PV\PyramidalBehAL\'];
    end
    
    load([pathAnal0 'autoCorrPyrAllRec.mat']);
    
    if(exist([pathAnal0 'behAllRec.mat']))
        load([pathAnal0 'behAllRec.mat']);
    end
    
    if(task == 1 && exist('behAlignedNoCue') == 0)
        disp('No cue')
        behAlignedNoCue = accumBeh(listRecordingsNoCuePath,...
            listRecordingsNoCueFileName,mazeSessionNoCue,1,onlyRun);
        behAlignedSpeedBefTimeNoCue = accumSpeedTime(listRecordingsNoCuePath,...
            listRecordingsNoCueFileName,mazeSessionNoCue,1,onlyRun);
        disp('Active licking')
        behAlignedAL = accumBeh(listRecordingsActiveLickPath,...
            listRecordingsActiveLickFileName,mazeSessionActiveLick,2,onlyRun);
        behAlignedSpeedBefTimeAL = accumSpeedTime(listRecordingsActiveLickPath,...
            listRecordingsActiveLickFileName,mazeSessionActiveLick,2,onlyRun);
        disp('Passive licking')
        behAlignedPL = accumBeh(listRecordingsPassiveLickPath,...
            listRecordingsPassiveLickFileName,mazeSessionPassiveLick,3,onlyRun);
        behAlignedSpeedBefTimePL = accumSpeedTime(listRecordingsPassiveLickPath,...
            listRecordingsPassiveLickFileName,mazeSessionPassiveLick,3,onlyRun);
        save([pathAnal0 'behAllRec.mat'],'behAlignedNoCue','behAlignedAL','behAlignedPL',...
            'behAlignedSpeedBefTimeNoCue','behAlignedSpeedBefTimeAL',...
            'behAlignedSpeedBefTimePL'); 
    end
    
    behAligned.indRecNoCue = unique(autoCorrPyrNoCue.indRec(autoCorrPyrNoCue.task == 1));
    behAligned.indRecNoCueField = unique(autoCorrPyrNoCue.indRec(autoCorrPyrNoCue.task == 1 &...
        modAlignedPyrNoCue.nNeuWithField > 1));
    behAligned.indRecNoCueNoField = unique(autoCorrPyrNoCue.indRec(autoCorrPyrNoCue.task == 1 &...
        modAlignedPyrNoCue.nNeuWithField == 0));
    
    behAligned.indRecAL = unique(autoCorrPyrAL.indRec(autoCorrPyrAL.task == 2));
    behAligned.indRecALField = unique(autoCorrPyrAL.indRec(autoCorrPyrAL.task == 2 &...
        modAlignedPyrAL.nNeuWithField > 1));
    behAligned.indRecALNoField = unique(autoCorrPyrAL.indRec(autoCorrPyrAL.task == 2 &...
        modAlignedPyrAL.nNeuWithField == 0));
    
    behAligned.indRecPL = unique(autoCorrPyrPL.indRec(autoCorrPyrPL.task == 3));
    behAligned.indRecPLField = unique(autoCorrPyrPL.indRec(autoCorrPyrPL.task == 3 &...
        modAlignedPyrPL.nNeuWithField > 1));
    behAligned.indRecPLNoField = unique(autoCorrPyrPL.indRec(autoCorrPyrPL.task == 3 &...
        modAlignedPyrPL.nNeuWithField == 0));
    
    behAlignedMeanField = accumMeanBeh(behAlignedNoCue,behAlignedAL,behAlignedPL,behAligned,task);
    behAlignedMeanFieldStat = accumMeanBehStat(behAlignedMeanField,behAlignedNoCue.spaceStepsLick,...
        behAlignedNoCue.spaceStepsSpeed);
    
    behAlignedMean = accumMeanBehGoodBad(behAlignedNoCue,behAlignedAL,behAlignedPL,task);
    
    behAlignedMeanStat = accumMeanBehStatGoodBad(behAlignedMean,...
        behAlignedNoCue.spaceStepsLick,behAlignedNoCue.spaceStepsSpeed);
        
    save([pathAnal 'behAllRecSel.mat'],'behAligned','behAlignedMean',...
            'behAlignedMeanField','behAlignedMeanFieldStat',...
            'behAlignedMeanStat');  
        
    plotSpeedRec(pathAnal,behAlignedSpeedBefTimeAL.timeStep,...
        behAlignedSpeedBefTimeAL.meanSpeedTimeNonStimGoodPerRec(15,:)/10,...
        behAlignedSpeedBefTimeAL.semSpeedTimeNonStimGoodPerRec(15,:)/10,[-3 7],'A023-20191219-01')
    
    plotSpeed(pathAnal,behAlignedNoCue.spaceStepsSpeed,...
        behAlignedMeanField.meanSpeedNonStimPerRecField,...
        behAlignedMeanField.meanSpeedNonStimPerRecNoField,[{'Field'} {'No Field'}],...
        [pathAnal 'MeanSpeedVsDistNonStim-Field-NoField']);
    plotLick(pathAnal,behAlignedNoCue.spaceStepsLick,...
        behAlignedMeanField.meanLickPerRecField,...
        behAlignedMeanField.meanLickPerRecNoField,[{'Field'} {'No Field'}],...
        [pathAnal 'MeanLickVsDistNonStim-Field-NoField']);
    
    plotSpeed(pathAnal,behAlignedNoCue.spaceStepsSpeed,...
        behAlignedMeanField.speedTraceNonStimPerRecField,...
        behAlignedMeanField.speedTraceNonStimPerRecNoField,[{'Field'} {'No Field'}],...
        [pathAnal 'SpeedVsDist-Field-NoField']);
    plotLick(pathAnal,behAlignedNoCue.spaceStepsLick,...
        behAlignedMeanField.lickTraceNonStimPerRecField,...
        behAlignedMeanField.lickTraceNonStimPerRecNoField,[{'Field'} {'No Field'}],...
        [pathAnal 'LickVsDist-Field-NoField']);
        
    plotSpeed(pathAnal,behAlignedNoCue.spaceStepsSpeed,...
        behAlignedMeanField.speedTraceNonStimGoodPerRecField,...
        behAlignedMeanField.speedTraceNonStimGoodPerRecNoField,[{'Field'} {'No Field'}],...
        [pathAnal 'SpeedVsDistGood-Field-NoField']);
    plotLick(pathAnal,behAlignedNoCue.spaceStepsLick,...
        behAlignedMeanField.lickTraceNonStimGoodPerRecField,...
        behAlignedMeanField.lickTraceNonStimGoodPerRecNoField,[{'Field'} {'No Field'}],...
        [pathAnal 'LickVsDistGood-Field-NoField']);
    
    plotSpeed(pathAnal,behAlignedNoCue.spaceStepsSpeed,...
        behAlignedMeanField.meanSpeedNonStimGoodPerRecField,...
        behAlignedMeanField.meanSpeedNonStimGoodPerRecNoField,[{'Field'} {'No Field'}],...
        [pathAnal 'MeanSpeedVsDistGood-Field-NoField']);
    plotLick(pathAnal,behAlignedNoCue.spaceStepsLick,...
        behAlignedMeanField.meanLickNonStimGoodPerRecField,...
        behAlignedMeanField.meanLickNonStimGoodPerRecNoField,[{'Field'} {'No Field'}],...
        [pathAnal 'MeanLickVsDistGood-Field-NoField']);
    
    colorSel = 0;
    plotBehAlignedMean(pathAnal,behAlignedMeanField,behAlignedMeanFieldStat,colorSel);
            
    pause;
    close all;
    
    histStopTime(pathAnal,'histStopTimeNonStimPerRec',behAlignedMeanField.totStopLenTNonStimPerRec,...
        0.1,'Total stop time (s)',[0 10]);
    
    histStopTime(pathAnal,'histStartCueToRunNonStimPerRec',behAlignedMeanField.startCueToRunNonStimPerRec,...
        0.1,'Start cue to run (s)',[min(behAlignedMeanField.startCueToRunNonStimPerRec)...
        max(behAlignedMeanField.startCueToRunNonStimPerRec)]);
    
    histStopTime(pathAnal,'histStartCueToRunNonStimPerRec0to10',behAlignedMeanField.startCueToRunNonStimPerRec,...
        0.1,'Start cue to run (s)',[min(behAlignedMeanField.startCueToRunNonStimPerRec) 10]);
    
    histStopTime(pathAnal,'histStartCueToRunNonStimPerRec0to5',behAlignedMeanField.startCueToRunNonStimPerRec,...
        0.1,'Start cue to run (s)',[min(behAlignedMeanField.startCueToRunNonStimPerRec) 5]);
    
    histStopTime(pathAnal,'histRewardToRunNonStimPerRec0to10',behAlignedMeanField.rewardToRunNonStimPerRec,...
        0.1,'Reward to run (s)',[min(behAlignedMeanField.rewardToRunNonStimPerRec)...
        max(behAlignedMeanField.rewardToRunNonStimPerRec)]);
    
    histStopTime(pathAnal,'histRewardToRunNonStimPerRec0to10',behAlignedMeanField.rewardToRunNonStimPerRec,...
        0.1,'Reward to run (s)',[min(behAlignedMeanField.rewardToRunNonStimPerRec) 10]);
    
    histStopTime(pathAnal,'histRewardToRunNonStimPerRec0to5',behAlignedMeanField.rewardToRunNonStimPerRec,...
        0.1,'Reward to run (s)',[min(behAlignedMeanField.rewardToRunNonStimPerRec) 5]);
    
    plotSpeed(pathAnal,behAlignedNoCue.spaceStepsSpeed,...
        behAlignedMean.speedTraceNonStimGoodPerRec,...
        behAlignedMean.speedTraceNonStimBadPerRec,[{'Good'} {'Bad'}],...
        [pathAnal 'SpeedVsDist-GoodBad']);
    plotLick(pathAnal,behAlignedNoCue.spaceStepsLick,...
        behAlignedMean.lickTraceNonStimGoodPerRec,...
        behAlignedMean.lickTraceNonStimBadPerRec,[{'Good'} {'Bad'}],...
        [pathAnal 'LickVsDist-GoodBad']);
    plotSpeed(pathAnal,behAlignedNoCue.spaceStepsSpeed,...
        behAlignedMean.meanSpeedPerRecNonStimGood,...
        behAlignedMean.meanSpeedPerRecNonStimBad,[{'Good'} {'Bad'}],...
        [pathAnal 'MeanSpeedVsDist-GoodBad']);
    plotLick(pathAnal,behAlignedNoCue.spaceStepsLick,...
        behAlignedMean.meanLickPerRecNonStimGood,...
        behAlignedMean.meanLickPerRecNonStimBad,[{'Good'} {'Bad'}],...
        [pathAnal 'MeanLickVsDist-GoodBad']);
    colorSel = 0;
    plotBehAlignedMeanGoodBad(pathAnal,behAlignedMean,behAlignedMeanStat,colorSel);
    
    plotBehAlignedMeanGoodBadBar(pathAnal,behAlignedMean,behAlignedMeanStat,colorSel);
    pause;
    close all;
end

function histStopTime(pathAnal,fileName1,data,timeBin,xl,xlim)
    handle     = figure;
    set(handle,'OuterPosition',...
        [500 500 280 280])
    [counts,centers] = hist(data,min(data):timeBin:max(data)+timeBin);
    bar(centers, counts/length(data),'FaceColor',[0.3 .3 .3],'EdgeColor',[0.3 .3 .3]);
    set(gca,'XLim',xlim,'FontSize',12);
    xlabel(xl);
    ylabel('Prob.')
    if(~isempty(xlim))
        tmp = data <= xlim(2);
        percDataInc = sum(tmp)/length(tmp);
    else
        percDataInc = 1;
    end
    title(['Mean = ' num2str(mean(data)) ', ' num2str(percDataInc*100) '%']);
    saveas(gcf,[pathAnal fileName1]);
    print('-painters', '-dpdf', [pathAnal fileName1], '-r600')
end













